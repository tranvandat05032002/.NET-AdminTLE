@using System.Globalization
@model OrderDetailModel
@{
    string description = Model.Order.StatusDescription;
    if (Model.Order.Status == 1 || Model.Order.Status == 2)
    {
        string[] statusDescription = Model.Order.StatusDescription.Split('.');
        description = statusDescription[1];
    }

    DateTime orderTime = DateTime.ParseExact(Model.Order.OrderTime.ToString("dd/MM/yyyy hh:mm:ss tt"),
    "dd/MM/yyyy hh:mm:ss tt", null);

    // Lấy múi giờ Việt Nam (UTC+7)
    TimeZoneInfo vietnamTimeZone = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");

    // Chuyển đổi thời gian từ Local hoặc UTC sang giờ Việt Nam
    DateTime vietnamDate = TimeZoneInfo.ConvertTimeFromUtc(orderTime, vietnamTimeZone);

    // Định dạng thời gian theo kiểu 24 giờ
    string vietnamDateString = vietnamDate.ToString("dd/MM/yyyy HH:mm:ss");

    decimal totalPrice = 0m;

    ViewData["Title"] = "";
}

<!-- Giao diện Theo Dõi Đơn Hàng -->
<div class="order-tracking-container">
    <div class="d-flex justify-content-between align-items-center" style="margin-bottom: -20px;">
        <div class="update-button">
            <a href="~/Order/Index" class="btn btn-light">
                <i class="fa-solid fa-arrow-left" style="margin-right: 5px;"></i>
                Quay lại
            </a>
        </div>
        @if (@Model.Order.Status == 1)
        {
            <div>
                <p class="status-label loading">@description</p>
            </div>
        }
        @if (@Model.Order.Status == 2)
        {
            <div>
                <p class="status-label accept">@description</p>
            </div>
        }
        @if (@Model.Order.Status == 3)
        {
            <div>
                <p class="status-label process">@description</p>
            </div>
        }
        @if (@Model.Order.Status == 4)
        {
            <div>
                <p class="status-label done">@description</p>
            </div>
        }
        @if (@Model.Order.Status == -1)
        {
            <div>
                <p class="status-label cancel">@description</p>
            </div>
        }
        @if (@Model.Order.Status == -2)
        {
            <div>
                <p class="status-label reject">@description</p>
            </div>
        }
    </div>

    <!-- Thông Tin Đơn Hàng -->-
    <div class="order-info">
        <p><strong>Mã Đơn Hàng: </strong>@Model.Order.OrderID</p>
        <p><strong>Người Nhận: </strong> @Model.Order.CustomerName</p>
        <p><strong>Thành Phố: </strong> @Model.Order.DeliveryProvince</p>
        <p><strong>Địa Chỉ: </strong>@Model.Order.DeliveryAddress</p>
        <p><strong>Ngày Đặt Hàng: </strong>@vietnamDateString</p>
        <p style="margin-bottom: 10px;"><strong>Danh sách sản phẩm đã đặt: </p>

        <table class="cart-table">
            <thead class="cart-table-head">
                <tr class="table-head-row">
                    <th class="product-image" style="font-weight: bold;">Ảnh sản phầm</th>
                    <th class="product-name" style="font-weight: bold;">Tên sản phẩm</th>
                    <th class="product-quantity" style="font-weight: bold;">Số lượng</th>
                    <th class="product-total-price" style="font-weight: bold;">Tổng tiền</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var item in Model.Details)
                {
                    totalPrice += item.TotalPrice;
                    <tr class="table-body-row" style="font-weight: 500;">
                        <td class="product-image">
                            <img src="@WebConfig.ADMIN_URL/images/products/@(string.IsNullOrWhiteSpace(item.Photo) ? "default-image.gif" : item.Photo)"
                                                    alt="Ảnh mô tả sản phẩm">
                        </td>
                        <td class="product-name">
                            @item.ProductName
                        </td>
                        <td class="product-quantity">
                            @item.Quantity
                        </td>
                        <td class="product-total-price">
                            @item.TotalPrice.ToString("#,0",
                                        CultureInfo.GetCultureInfo("vi-VN")) VNĐ
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="cart-buttons d-flex align-items-center justify-content-end">
            <div class="">
                <div class="cart-summary-header">
                    <h3>Tổng Tiền: <span style="font-weight: 300;">@totalPrice.ToString("#,0",
                                        CultureInfo.GetCultureInfo("vi-VN")) VNĐ</span></h3>
                </div>
            </div>
        </div>
    </div>

    <!-- Tiến Trình Đơn Hàng -->
    @if (@Model.Order.Status > 0)
    {
        <div class="d-flex flex-column">
            <div style="width: 97%;">
                <div class="tracking-steps d-flex justify-content-between align-items-center" style="width: 95%; margin-left: 40px;">
                    <div class="step loading">
                        <div class="circle" title="Đang chờ duyệt" style="padding: 27px; border: 3px solid #ddd; border-radius: 100%; color: #ddd;">
                            <i class="fa-solid fa-receipt" style="font-size: 30px; font-weight: bold;"></i>
                        </div>
                    </div>
                    <div class="step accept">
                        <div class="circle" title="Đang lấy hàng" style="padding: 27px; border: 3px solid #ddd; border-radius: 100%; color: #ddd;">
                            <i class="fa-solid fa-money-bill" style="font-size: 30px; font-weight: bold;"></i>
                        </div>
                    </div>
                    <div class="step process">
                        <div class="circle" title="Đang được giao" style="padding: 27px; border: 3px solid #ddd; border-radius: 100%; color: #ddd;">
                            <i class="fa-solid fa-truck" style="font-size: 30px; font-weight: bold;"></i>
                        </div>
                    </div>
                    <div class="step done">
                        <div class="circle" title="Đã hoàn tất" style="padding: 27px; border: 3px solid #ddd; border-radius: 100%; color: #ddd;">
                            <i class="fa-solid fa-check" style="font-size: 30px; font-weight: bold;"></i>
                        </div>
                    </div>

                    <div class="bar-background"></div>

                    <div class="bar">
                        <span class="indicator"></span>
                    </div>
                </div>
            </div>
            <div class="step d-flex justify-content-between align-items-center">
                <div class="loading">
                    <p>Đang chờ duyệt</p>
                </div>
                <div class="accept">
                    <p>Đang lấy hàng</p>
                </div>
                <div class="process">
                    <p>Đang được giao</p>
                </div>
                <div class="done">
                    <p>Đã hoàn tất</p>
                </div>
            </div>
        </div>

        <div class="order-actions">
            @if (@Model.Order.Status == 4 ^ @Model.Order.Status == 3)
            {
                <button class="btn btn-secondary opacity-25" disabled>
                    Hủy Đơn Hàng
                </button>
            }
            else
            {
                <a href="~/Order/Cancel/@Model.Order.OrderID" class="btn btn-secondary">Hủy Đơn Hàng</a>
            }
            <a href="#" class="btn btn-primary">Liên Hệ Hỗ Trợ</a>
        </div>
    }
    else
    {
        <div class=" d-flex justify-content-center align-items-center">
            <div style="width: 80px; height: 80px; border: 5px solid red; border-radius: 100%; background-color: rgba(255, 96, 96, 0.2);"
                class="d-flex justify-content-center align-items-center">
                <i class="fa-solid fa-x" style="font-size: 32px; color: red;"></i>
            </div>
        </div>
    }

</div>

<!-- CSS Tùy Chỉnh -->
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f8f9fa;
        margin: 0;
        padding: 0;
    }

    .order-tracking-container {
        max-width: 800px;
        margin: 50px auto;
        padding: 30px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

    .tracking-title {
        font-size: 2rem;
        color: #007BFF;
        margin-bottom: 20px;
    }

    .order-info {
        text-align: left;
        margin-bottom: 30px;
        font-size: 1rem;
    }

    .order-info p {
        margin: 5px 0;
        color: #333;
    }

    /* Tiến trình theo dõi */
    .tracking-steps {
        position: relative;
        display: flex;
        justify-content: space-between;
        @* margin: 20px 0; *@
        z-index: 100;
    }

    .step {
        text-align: center;
        z-index: 100;
    }

    .step > div {
        background-color: white;
    }

    .step .circle {
        width: 30px;
        height: 30px;
        @* background-color: #ddd; *@
        border-radius: 50%;
        margin: 0 auto;
        line-height: 30px;
        color: #fff;
        font-weight: bold;
        display: flex;
        justify-content: center;
        align-items: center;


        
        @* border-color: #11e402 !important;
        border-image-slice: 1 !important;
        color: #11e402 !important;
        box-sizing: border-box !important;
        border-radius: 100% !important; *@
    }

    .step p {
        margin-top: 10px;
        font-size: 0.9rem;
        color: #555;
    }


    /* Nút hành động */
    .order-actions {
        margin-top: 20px;
    }

    .btn-back,
    .btn-support {
        display: inline-block;
        padding: 10px 20px;
        margin: 5px;
        text-decoration: none;
        color: #fff;
        border-radius: 5px;
        background-color: #007BFF;
        transition: background-color 0.3s;
    }

    .btn-back:hover {
        background-color: #0056b3;
    }

    .btn-support {
        background-color: #28a745;
    }

    .btn-support:hover {
        background-color: #218838;
    }

    .tracking-steps .bar {
        position: absolute;
        height: 4px;
        width: 0%;
        /* Ban đầu thanh tiến trình có chiều rộng là 0% */
        background-color: #11e402;
        transition: width 1s ease;
        z-index: -1;
    }

    .tracking-steps .bar-background {
        position: absolute;
        height: 4px;
        width: 100%;
        /* Đường tiến trình ảo luôn chiếm 100% */
        background-color: #ccc;
        /* Màu xám nhạt */
        opacity: 0.3;
        /* Làm mờ đường tiến trình ảo */
        z-index: -2;
        /* Đặt phía sau thanh chính */
    }
</style>

<script>
    const status = +@Model.Order.Status;

    // Lấy tất cả các phần tử của step và thanh bar
    const steps = document.querySelectorAll('.tracking-steps .step');
    const bar = document.querySelector('.tracking-steps .bar');

    // Hàm cập nhật tiến trình và các vòng tròn
    function updateTrackingSteps(status) {
        // Cập nhật chiều rộng của thanh tiến trình (bar)
        bar.style.width = `${((status - 1) / 3) * 100}%`; // Chia cho 4 để hoàn thành 100%

        // Duyệt qua từng bước và thay đổi màu sắc của các vòng tròn
        // Step: 0, 1, 2, 3
        // status: 1, 2, 3, 4
        steps.forEach((step, index) => {
            const circle = step.querySelector('.circle');
            // Cập nhật màu sắc dựa trên trạng thái
            if (index < status) {
                circle.style.backgroundColor = "rgba(17, 228, 2, 1)";
                circle.style.color = "#fff";
                circle.style.borderColor = "#11e402";
            } else if (index === status) {
                circle.style.color = "#11e402";
                circle.style.borderColor = "#11e402";
            } 
        });
    }

    // Gọi hàm để cập nhật giao diện theo trạng thái của đơn hàng
    updateTrackingSteps(status);

</script>